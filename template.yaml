AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  servy-ts

  Sample SAM Template for servy-ts
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeUri: ./
    Handler: app.lambdaHandler
    Runtime: nodejs16.x
    Architectures:
      - x86_64
    Timeout: 60
    MemorySize: 128
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,PATCH,OPTIONS'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Parameters:
  MyPar:
    Type: String
    Default: MyParVal

Resources:
# 'https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-controlling-access-to-apis-lambda-authorizer.html'
#  MyApi:
#    Type: AWS::Serverless::Api
#    Properties:
#      StageName: Prod
#      Auth:
#        DefaultAuthorizer: MyLambdaTokenAuthorizer
#        Authorizers:
#          MyLambdaTokenAuthorizer:
#            FunctionArn: !GetAtt MyAuthFunction.Arn
  #############################################################
  ########################### QUEUE ###########################
  #############################################################
  CreateDatabaseTestSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: create-database-test
      Tags:
        - Key: Name
          Value: create-database-test

  DeployProjectSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: deploy-project-sqs
      Tags:
        - Key: Name
          Value: deploy-project-sqs
  #############################################################
  ########################### QUEUE ###########################
  #############################################################
#  SnsTopicSamTutorial:
#    Type: AWS::SNS::Topic
#    Properties:
#      TopicName: !Sub '${ProjectName}'
#      Subscription:
#        - Protocol: sqs
#          Endpoint: !GetAtt SqsQueueSamTutorial.Arn
#      Tags:
#        - Key: Name
#          Value: !Sub '${ProjectName}'

  #############################################################
  ######################### FUNCTIONS #########################
  #############################################################
#  LambdaSamTutorial:
#    Type: AWS::Serverless::Function
#    Properties:
#      FunctionName: !Sub '${ProjectName}'
#      CodeUri: application/
#      Handler: tutorial.lambda.handler
#      Runtime: python3.8
#      Events:
#        SqsTrigger:
#          Type: SQS
#          Properties:
#            Queue: !GetAtt SqsQueueSamTutorial.Arn
#  HelloWorldFunction:
#    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
#    Properties:
#      Events:
#        ApiEvent:
#          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
#          Properties:
#            Path: /hello
#            Method: get
#    Metadata: # Manage esbuild properties
#      BuildMethod: esbuild
#      BuildProperties:
#        Minify: true
#        Target: "es2020"
#        Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
#        EntryPoints:
#          - src/hello-world/app.ts
  CreateDatabaseTestFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      MemorySize: 256
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /database/create
            Method: POST
      Environment:
        Variables:
          CREATE_DATABASE_QUEUE_ARN: !GetAtt CreateDatabaseTestSQS.Arn
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt CreateDatabaseTestSQS.QueueName
            Auth:
              Authorizer: "NONE"
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - src/database/functions/create-database/app.ts
  WebhookReceiverFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      MemorySize: 256
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /webhook/receiver
            Method: POST
      Environment:
        Variables:
          DEPLOY_PROJECT_QUEUE_ARN: !GetAtt DeployProjectSQS.Arn
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt DeployProjectSQS.QueueName
            Auth:
              Authorizer: "NONE"
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - src/github/functions/receive-webhook/app.ts
